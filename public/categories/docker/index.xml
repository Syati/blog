<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
      <title>Docker on Syati.info </title>
      <generator uri="https://gohugo.io">Hugo</generator>
    <link>http://blog.syati.info/categories/docker/</link>
    <language>ja-JP</language>
    
    <copyright>Copyright (c) 2008 - 2015, mizuki-y; all rights reserved.</copyright>
    <updated>Wed, 09 Sep 2015 23:00:19 JST</updated>
    
    <item>
      <title>docker-machine コマンドの使用方法・流れ</title>
      <link>http://blog.syati.info/post/docker_machine/</link>
      <pubDate>Wed, 09 Sep 2015 23:00:19 JST</pubDate>
      
      <guid>http://blog.syati.info/post/docker_machine/</guid>
      <description>

&lt;p&gt;Docker すごい。 何がすごいって環境構築が楽すぎる。以前は、Vagrant と Chef でゴリゴリ書いてアプリケーションが動くように頑張ってましたが、そんな事しなくても大方用意されてる。あとはその組み合わせ環境を構築するだけ。懸念点であった Vagrant 、Chef のような provision が、遅いということは今のところ無い。最初にイメージを DL してコンテナ化するので、若干の時間はかかるものの、それでも早い。 具体的な環境構築については、後日記そうと思う。&lt;/p&gt;

&lt;p&gt;今回は &lt;strong&gt;docker-machine コマンド&lt;/strong&gt;（コンテナを動かす vm を管理するコマンド）の使用方法、流れを記す。&lt;/p&gt;

&lt;h1 id=&#34;前提:7c5114aaedd3fb4e06a20334e7806cc9&#34;&gt;前提&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;OSX 10.10.5&lt;/li&gt;
&lt;li&gt;Docker Toolbox

&lt;ul&gt;
&lt;li&gt;Docker version 1.8.1, build d12ea79&lt;/li&gt;
&lt;li&gt;docker-machine version 0.4.1 (e2c88d6)&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Virtual Box 5.0.3&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;docker-machine-コマンド-流れ:7c5114aaedd3fb4e06a20334e7806cc9&#34;&gt;docker-machine コマンド、流れ&lt;/h1&gt;

&lt;p&gt;以下のレイヤーと対応するコマンドを覚えておくと、スムーズかもしれない。&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;left&#34;&gt;レイヤー&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;対応コマンド&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;Docker Container&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;docker&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;Docker VM&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;docker-machine&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;OSX&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&#34;step-1-docker-vm-を確認する:7c5114aaedd3fb4e06a20334e7806cc9&#34;&gt;Step 1 docker vm を確認する&lt;/h2&gt;

&lt;p&gt;作成した docker vm を確認する。普段の &lt;strong&gt;ls&lt;/strong&gt; と同じ感じで使う頻度が高い。はじめは何もないので空である。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ docker-machine ls

NAME      ACTIVE   DRIVER       STATE     URL                         SWARM
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;step-2-docker-vm-を作成する:7c5114aaedd3fb4e06a20334e7806cc9&#34;&gt;Step 2 docker vm を作成する&lt;/h2&gt;

&lt;p&gt;docker vm を作成する。 以下のコマンドは、オプション driver で virtualbox を指定して、 vm 名を sample にしている。色々オプションがあるので、もっと詳しくという方は、&lt;a href=&#34;https://docs.docker.com/machine/reference/create/&#34;&gt;create&lt;/a&gt; を参考にしてください。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ docker-machine create --driver virtualbox sample

Creating VirtualBox VM...
Creating SSH key...
Starting VirtualBox VM...
Starting VM...
To see how to connect Docker to this machine, run: docker-machine env sample
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Step 1 の通り、作成した docker vm を確認してみる。vm が作成されているとともに、STATE を見ることで動作していること、URL を見ることで IP が割り振られていることが確認できる。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ docker-machine ls

NAME      ACTIVE   DRIVER       STATE     URL                         SWARM
sample             virtualbox   Running   tcp://192.168.99.103:2376
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;step-3-docker-vm-を利用する:7c5114aaedd3fb4e06a20334e7806cc9&#34;&gt;Step 3 docker vm を利用する&lt;/h2&gt;

&lt;p&gt;Step 2 まででは、対象の docker vm にコンテナを操作するコマンド(docker ps など)を実行できない。SSH で対象 vm に入れば可能だが、そんな面倒くさいことは毎回したくない。
そこで、以下のように env -&amp;gt; eval コマンドを実行して、利用する docker vm の環境変数を設定する。設定した docker vm の ACTIVE に * が記される。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ docker-machine env sample

export DOCKER_TLS_VERIFY=&amp;quot;1&amp;quot;
export DOCKER_HOST=&amp;quot;tcp://192.168.99.103:2376&amp;quot;
export DOCKER_CERT_PATH=&amp;quot;/Users/mizuki-y/.docker/machine/machines/sample&amp;quot;
export DOCKER_MACHINE_NAME=&amp;quot;sample&amp;quot;
# Run this command to configure your shell:
# eval &amp;quot;$(docker-machine env sample)&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ eval &amp;quot;$(docker-machine env sample)&amp;quot;
$ docker-machine ls

NAME      ACTIVE   DRIVER       STATE     URL                         SWARM
sample    *        virtualbox   Running   tcp://192.168.99.103:2376
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;これで今後利用する docker コマンドは docker vm である sample に発行される。&lt;/p&gt;

&lt;h1 id=&#34;その他:7c5114aaedd3fb4e06a20334e7806cc9&#34;&gt;その他&lt;/h1&gt;

&lt;h2 id=&#34;docker-vm-の中身を確認する-ssh-で入る:7c5114aaedd3fb4e06a20334e7806cc9&#34;&gt;docker vm の中身を確認する ssh で入る&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ docker-machine ssh sample

                        ##         .
                  ## ## ##        ==
               ## ## ## ## ##    ===
           /&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;\___/ ===
      ~~~ {~~ ~~~~ ~~~ ~~~~ ~~~ ~ /  ===- ~~~
           \______ o           __/
             \    \         __/
              \____\_______/
 _                 _   ____     _            _
| |__   ___   ___ | |_|___ \ __| | ___   ___| | _____ _ __
| &#39;_ \ / _ \ / _ \| __| __) / _` |/ _ \ / __| |/ / _ \ &#39;__|
| |_) | (_) | (_) | |_ / __/ (_| | (_) | (__|   &amp;lt;  __/ |
|_.__/ \___/ \___/ \__|_____\__,_|\___/ \___|_|\_\___|_|
Boot2Docker version 1.8.1, build master : 7f12e95 - Thu Aug 13 03:24:56 UTC 2015
Docker version 1.8.1, build d12ea79
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Mac に Docker をインストールする</title>
      <link>http://blog.syati.info/post/osx_docker_setup/</link>
      <pubDate>Thu, 03 Sep 2015 16:00:00 JST</pubDate>
      
      <guid>http://blog.syati.info/post/osx_docker_setup/</guid>
      <description>

&lt;p&gt;巷で Docker と騒がれて随分経ったでしょうか。私の Mac が新しくなったのを気に Docker に入門したいと思います。何か新しい開発の度にゴミが入るのはちょっと・・・、とも思いますしね。&lt;/p&gt;

&lt;p&gt;昔、Vagrant と Chef でローカル開発環境を構築していたこともありましたが provison が遅く、何だかなぁ〜と思っているうちに遠ざかっていました。Docker はコンテナ型で、vagrant より軽いのかな。&lt;/p&gt;

&lt;h1 id=&#34;前提:721a6b0475e6190575ce57e1a6fd89e9&#34;&gt;前提&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;OSX 10.10.5&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;step-1-install-virtualbox:721a6b0475e6190575ce57e1a6fd89e9&#34;&gt;Step 1 Install VirtualBox&lt;/h1&gt;

&lt;p&gt;VirtualBox5.0.2 だと Step 3 で動かなくなるので、&lt;a href=&#34;https://www.virtualbox.org/wiki/Testbuilds&#34;&gt;テストビルド&lt;/a&gt;から入れる。5.0.2 だった場合、 &lt;a href=&#34;#error-1:721a6b0475e6190575ce57e1a6fd89e9&#34;&gt;エラー1&lt;/a&gt;が出る。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;参考

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://qiita.com/tukiyo3/items/c912fe9e403706964995&#34;&gt;Docker Toolbox付属のVirtualBox5.0.2では動かないので5.0.3を手動で入れること&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;step-2-install-docker-toolbox:721a6b0475e6190575ce57e1a6fd89e9&#34;&gt;Step 2 Install Docker Toolbox&lt;/h1&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ brew cask install dockertoolbox
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;a href=&#34;(http://blog.syati.info/post/brew_cask/&#34;&gt;cask&lt;/a&gt; って思う方は、公式から &lt;a href=&#34;https://www.docker.com/toolbox&#34;&gt;Docker Toolbox&lt;/a&gt; をインストールしましょう。詳しい説明は、&lt;a href=&#34;https://docs.docker.com/mac/step_one/&#34;&gt;Install Docker Mac OS X&lt;/a&gt; 。インストールされる場所は以下のとおり、/usr/local/bin なので、path が通っていればコマンドが通るはずです。&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;By default, the standard Docker Toolbox installation:
   installs binaries for the Docker tools in /usr/local/bin&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;コマンド例&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ docker --version
Docker version 1.8.1, build d12ea79
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;step-3-とりあえず起動:721a6b0475e6190575ce57e1a6fd89e9&#34;&gt;Step 3 とりあえず起動&lt;/h1&gt;

&lt;p&gt;&lt;a href=&#34;http://docs.docker.com/mac/step_one/#step-3-verify-your-installation&#34;&gt;Installation&lt;/a&gt; に書いてあるとおり、以下のコマンドで、とりあえず起動、コマンドを実行してみる。&lt;a href=&#34;#error:721a6b0475e6190575ce57e1a6fd89e9&#34;&gt;エラー&lt;/a&gt;が無いことをもって、インストール・起動ができたことの確認を終了する。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ bash &#39;/Applications/Docker Quickstart Terminal.app/Contents/Resources/Scripts/start.sh&#39;
$ docker run hello-world

Hello from Docker.
This message shows that your installation appears to be working correctly.

To generate this message, Docker took the following steps:
 1. The Docker client contacted the Docker daemon.
 2. The Docker daemon pulled the &amp;quot;hello-world&amp;quot; image from the Docker Hub.
 3. The Docker daemon created a new container from that image which runs the
    executable that produces the output you are currently reading.
 4. The Docker daemon streamed that output to the Docker client, which sent it
    to your terminal.

To try something more ambitious, you can run an Ubuntu container with:
 $ docker run -it ubuntu bash

Share images, automate workflows, and more with a free Docker Hub account:
 https://hub.docker.com

For more examples and ideas, visit:
  https://docs.docker.com/userguide/
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;error:721a6b0475e6190575ce57e1a6fd89e9&#34;&gt;Error&lt;/h1&gt;

&lt;h2 id=&#34;error-1:721a6b0475e6190575ce57e1a6fd89e9&#34;&gt;VirtualBox 5.0.2 時で start.sh を叩いた場合&lt;/h2&gt;

&lt;p&gt;以下のとおり、vm が立ち上がってくれない。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;
Started machines may have new IP addresses. You may need to re-run the `docker-machine env` command.

Setting environment variables for machine default...


                        ##         .
                  ## ## ##        ==
               ## ## ## ## ##    ===
           /&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;\___/ ===
      ~~~ {~~ ~~~~ ~~~ ~~~~ ~~~ ~ /  ===- ~~~
           \______ o           __/
             \    \         __/
              \____\_______/


host is not running
docker is configured to use the default machine with IP
For help getting started, check out the docs at https://docs.docker.com

default is not running. Please start this with docker-machine start default

$ docker-machine start default
exit status 1
Started machines may have new IP addresses. You may need to re-run the `docker-machine env` command.
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;error-2:721a6b0475e6190575ce57e1a6fd89e9&#34;&gt;VirtualBox 5.0.3 にした後、以前作成した vm のエラー&lt;/h2&gt;

&lt;p&gt;設定が取れないので、以前作成した vm は削除して、あらためて start.sh を叩きましょう。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ docker-machine env default
open /Users/mizuki-y/.docker/machine/machines/default/ca.pem: no such file or directory
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Emacs で Dockerfile を編集する</title>
      <link>http://blog.syati.info/post/emacs_dockerfilemode/</link>
      <pubDate>Wed, 02 Sep 2015 17:58:56 JST</pubDate>
      
      <guid>http://blog.syati.info/post/emacs_dockerfilemode/</guid>
      <description>

&lt;p&gt;Docker に入門して、Dockerfile を書くことになったので、とりあえず dockerfile-mode 。&lt;/p&gt;

&lt;h1 id=&#34;install:2ed0ba6269ab29d148cbcf4c83fce2a2&#34;&gt;Install&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;M-x package-list-package で以下をインストールする&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;dockerfile-mode&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;~/.emacs.d/init.el に以下を追加&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-clike&#34;&gt;(autoload &#39;dockerfile-mode &amp;quot;dockerfile-mode&amp;quot; nil t)
(add-to-list &#39;auto-mode-alist &#39;(&amp;quot;Dockerfile\\&#39;&amp;quot; . dockerfile-mode))
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
  </channel>
</rss>
